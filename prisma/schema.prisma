// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model Account {
  id                 Int       @id @default(autoincrement())
  compoundId         String    @unique @map(name: "compound_id")
  userId             Int       @map(name: "user_id")
  providerType       String    @map(name: "provider_type")
  providerId         String    @map(name: "provider_id")
  providerAccountId  String    @map(name: "provider_account_id")
  refreshToken       String?   @map(name: "refresh_token")
  accessToken        String?   @map(name: "access_token")
  accessTokenExpires DateTime? @map(name: "access_token_expires")
  createdAt          DateTime  @default(now()) @map(name: "created_at")
  updatedAt          DateTime  @default(now()) @map(name: "updated_at")


  @@index([providerAccountId], name: "providerAccountId")
  @@index([providerId], name: "providerId")
  @@index([userId], name: "userId")
  @@map(name: "accounts")
}

model Session {
  id           Int      @id @default(autoincrement())
  userId       Int      @map(name: "user_id")
  expires      DateTime
  sessionToken String   @unique @map(name: "session_token")
  accessToken  String   @unique @map(name: "access_token")
  createdAt    DateTime @default(now()) @map(name: "created_at")
  updatedAt    DateTime @default(now()) @map(name: "updated_at")

  @@map(name: "sessions")
}

model User {
  id            Int       @id @default(autoincrement())
  name          String?
  email         String?   @unique
  emailVerified DateTime? @map(name: "email_verified")
  image         String?
  stories       Story[]
  series        Series[]
  createdAt     DateTime  @default(now()) @map(name: "created_at")
  updatedAt     DateTime  @default(now()) @map(name: "updated_at")

  @@map(name: "users")
}

model VerificationRequest {
  id         Int      @id @default(autoincrement())
  identifier String
  token      String   @unique
  expires    DateTime
  createdAt  DateTime @default(now()) @map(name: "created_at")
  updatedAt  DateTime @default(now()) @map(name: "updated_at")

  @@map(name: "verification_requests")
}

model Story {
  id          Int         @id @default(autoincrement())
  author      User        @relation(fields: [authorId], references: [id])
  series      Series?     @relation(fields: [seriesId], references: [id])
  authorId    Int
  characters  Character[]
  title       String
  subTitle    String?
  part        Int?
  description String?
  thumbnail   String?
  private     Boolean     @default(false)
  published   Boolean     @default(false)
  createdAt   DateTime    @default(now()) @map(name: "created_at")
  updatedAt   DateTime    @default(now()) @map(name: "updated_at")

  seriesId Int?
  @@map(name: "stories")
}

model Series {
  id          Int      @id @default(autoincrement())
  author      User     @relation(fields: [authorId], references: [id])
  authorId    Int
  stories     Story[]
  title       String   @unique
  description String?
  published   Boolean  @default(false)
  createdAt   DateTime @default(now()) @map(name: "created_at")
  updatedAt   DateTime @default(now()) @map(name: "updated_at")

  @@map(name: "series")
}

model Character {
  id          Int      @id @default(autoincrement())
  story       Story    @relation(fields: [storyId], references: [id])
  storyId     Int
  name        String?
  age         Int?
  bloodType   String?
  eyes        String?
  height      String?
  weight      String?
  description String?
  published   Boolean  @default(false)
  createdAt   DateTime @default(now()) @map(name: "created_at")
  updatedAt   DateTime @default(now()) @map(name: "updated_at")

  @@map(name: "characters")
}
